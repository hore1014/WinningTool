# article: (current period, current + 1, current + 2, current + 3)
def get_sales_forecast(period):
    if(period == 1):
        return {
            "P1": (150, 150, 150, 150),
            "P2": (150, 100, 100, 50),
            "P3": (150, 100, 50, 50),
        }
    else:
        return {
            "P1": (150, 150, 150, 150),
            "P2": (100, 100, 100, 100),
            "P3": (100, 50, 50, 50),
        }


# article: (current period, current + 1, current + 2, current + 3)
def get_inventory_strategy(period):
    if(period == 1):
        return {
            "P1": (100, 50, 50, 100),
            "P2": (50, 50, 50, 50),
            "P3": (50, 50, 50, 50),
            "E4": (100, 0, 0, 0),
            "E5": (100, 0, 0, 0),
            "E6": (100, 0, 0, 0),
            "E7": (100, 0, 0, 0),
            "E8": (100, 0, 0, 0),
            "E9": (100, 0, 0, 0),
            "E10": (100, 0, 0, 0),
            "E11": (100, 0, 0, 0),
            "E12": (100, 0, 0, 0),
            "E13": (100, 0, 0, 0),
            "E14": (100, 0, 0, 0),
            "E15": (100, 0, 0, 0),
            "E16": (300, 0, 0, 0),
            "E17": (300, 0, 0, 0),
            "E18": (100, 0, 0, 0),
            "E19": (100, 0, 0, 0),
            "E20": (100, 0, 0, 0),
            "E26": (300, 0, 0, 0),
            "E29": (100, 0, 0, 0),
            "E30": (100, 0, 0, 0),
            "E31": (100, 0, 0, 0),
            "E49": (100, 0, 0, 0),
            "E50": (100, 0, 0, 0),
            "E51": (100, 0, 0, 0),
            "E54": (100, 0, 0, 0),
            "E55": (100, 0, 0, 0),
            "E56": (100, 0, 0, 0),
        }
    else:
        return {
            "P1": (50, 50, 100, 100),
            "P2": (50, 50, 50, 50),
            "P3": (50, 50, 50, 50),
            "E4": (100, 0, 0, 0),
            "E5": (100, 0, 0, 0),
            "E6": (100, 0, 0, 0),
            "E7": (100, 0, 0, 0),
            "E8": (100, 0, 0, 0),
            "E9": (100, 0, 0, 0),
            "E10": (100, 0, 0, 0),
            "E11": (100, 0, 0, 0),
            "E12": (100, 0, 0, 0),
            "E13": (100, 0, 0, 0),
            "E14": (100, 0, 0, 0),
            "E15": (100, 0, 0, 0),
            "E16": (300, 0, 0, 0),
            "E17": (300, 0, 0, 0),
            "E18": (100, 0, 0, 0),
            "E19": (100, 0, 0, 0),
            "E20": (100, 0, 0, 0),
            "E26": (270, 0, 0, 0),
            "E29": (100, 0, 0, 0),
            "E30": (100, 0, 0, 0),
            "E31": (90, 0, 0, 0),
            "E49": (100, 0, 0, 0),
            "E50": (100, 0, 0, 0),
            "E51": (90, 0, 0, 0),
            "E54": (100, 0, 0, 0),
            "E55": (100, 0, 0, 0),
            "E56": (90, 0, 0, 0),
        }


# article: amount
def get_parts_inventory(period):
    if(period == 1):
        return {
            "P1": (100, 156.13),
            "P2": (100, 163.33),
            "P3": (100, 165.08),
            "E4": (100, 40.85),
            "E5": (100, 39.85),
            "E6": (100, 40.85),
            "E7": (100, 35.85),
            "E8": (100, 35.85),
            "E9": (100, 35.85),
            "E10": (100, 12.40),
            "E11": (100, 14.65),
            "E12": (100, 14.65),
            "E13": (100, 12.40),
            "E14": (100, 14.65),
            "E15": (100, 14.65),
            "E16": (300, 7.02),
            "E17": (300, 7.16),
            "E18": (100, 13.15),
            "E19": (100, 14.35),
            "E20": (100, 15.55),
            "K21": (300, 5.00),
            "K22": (300, 6.50),
            "K23": (300, 6.50),
            "K24": (6100, 0.06),
            "K25": (3600, 0.06),
            "E26": (300, 10.50),
            "K27": (1800, 0.10),
            "K28": (4500, 1.20),
            "E29": (100, 69.29),
            "E30": (100, 127.53),
            "E31": (100, 144.42),
            "K32": (2700, 0.75),
            "K33": (900, 22.00),
            "K34": (22000, 0.10),
            "K35": (3600, 1.00),
            "K36": (900, 8.00),
            "K37": (900, 1.50),
            "K38": (300, 1.50),
            "K39": (900, 1.50),
            "K40": (900, 2.50),
            "K41": (900, 0.06),
            "K42": (1800, 0.10),
            "K43": (1900, 5.00),
            "K44": (2700, 0.50),
            "K45": (900, 0.06),
            "K46": (900, 0.10),
            "K47": (900, 3.50),
            "K48": (1800, 1.50),
            "E49": (100, 64.64),
            "E50": (100, 120.63),
            "E51": (100, 137.47),
            "K52": (600, 22.00),
            "K53": (22000, 0.10),
            "E54": (100, 68.09),
            "E55": (100, 125.33),
            "E56": (100, 142.67),
            "K57": (600, 22.00),
            "K58": (22000, 0.10),
            "K59": (1800, 0.15),
        }
    else:
        return {
            "P1": (100, 156.27),
            "P2": (50, 163.71),
            "P3": (50, 165.81),
            "E4": (100, 41.32),
            "E5": (100, 41.49),
            "E6": (60, 41.35),
            "E7": (100, 36.24),
            "E8": (100, 36.04),
            "E9": (50, 36.57),
            "E10": (100, 13.14),
            "E11": (100, 13.82),
            "E12": (0, 14.65),
            "E13": (100, 13.44),
            "E14": (100, 13.60),
            "E15": (50, 14.96),
            "E16": (300, 7.04),
            "E17": (300, 7.17),
            "E18": (100, 14.10),
            "E19": (100, 15.87),
            "E20": (0, 15.55),
            "K21": (150, 5.00),
            "K22": (200, 6.50),
            "K23": (200, 6.50),
            "K24": (3650, 0.06),
            "K25": (2200, 0.06),
            "E26": (300, 10.86),
            "K27": (1100, 0.10),
            "K28": (2800, 1.20),
            "E29": (100, 69.57),
            "E30": (100, 127.62),
            "E31": (100, 144.76),
            "K32": (1890, 0.75),
            "K33": (700, 22.00),
            "K34": (14800, 0.10),
            "K35": (2360, 1.00),
            "K36": (580, 8.00),
            "K37": (600, 1.50),
            "K38": (350, 2.78),
            "K39": (600, 2.75),
            "K40": (550, 2.50),
            "K41": (550, 0.06),
            "K42": (1100, 0.10),
            "K43": (1550, 5.00),
            "K44": (1650, 0.50),
            "K45": (550, 0.06),
            "K46": (550, 0.10),
            "K47": (550, 3.50),
            "K48": (1100, 1.50),
            "E49": (100, 66.56),
            "E50": (100, 122.85),
            "E51": (100, 137.68),
            "K52": (300, 22.00),
            "K53": (11200, 0.10),
            "E54": (100, 68.33),
            "E55": (100, 125.57),
            "E56": (100, 142.78),
            "K57": (400, 22.00),
            "K58": (14800, 0.10),
            "K59": (1100, 0.15),
        }


# article: amount
def get_parts_processing(period):
    if(period == 1):
        return {
            # "P1": 10
        }
    else:
        return {
            "E6": 10,
            "E12": 10,
            "E15": 10,
            "E20": 10,
        }


# article: amount
def get_parts_in_queue(period):
    if(period == 1):
        return {
            # "P1": 30
        }
    else:
        return {
            "E6": 60,
            "E9": 100,
            "E12": 180,
            "E15": 80,
        }


def get_missing_parts(period):
    if(period == 1):
        return {
            # "P1": 30
        }
    else:
        return {
            "E20": 180,
        }


# article: (amount to be purchased, amount to be sold, price)
def get_parts_trade(period):
    if(period == 1):
        return {
            # "P1": (0, 70, 190, 20)
        }
    else:
        return {

        }


# article: (orderperiod, amount, mode)
def get_orders_in_transit(period):
    if(period == 1):
        return {
            "K21": [(1, 300, 5), ],
            "K22": [(1, 100, 5), ],
            "K24": [(1, 2650, 4), (1, 2500, 5), ],
            "K28": [(1, 100, 5), ],
            "K32": [(1, 1050, 5), ],
            "K35": [(1, 1400, 5), ],
            "K37": [(1, 50, 5), ],
            "K38": [(1, 600, 5), ],
            "K39": [(1, 600, 5), ],
            "K40": [(1, 50, 5), ],
            "K42": [(1, 100, 5), ],
            "K45": [(1, 50, 5), ],
            "K52": [(1, 200, 5), ],
            "K53": [(1, 6700, 5), ],
        }
    else:
        return {

        }
